#include "distance_kernel.h"
#include <math.h> // Include math.h for sqrtf

// distance_kernel_c:
//   Computes the Euclidean distance for each element:
//     Z[i] = sqrt((X2[i] - X1[i])^2 + (Y2[i] - Y1[i])^2)
//   using standard C arithmetic and sqrtf.
//
// Parameters:
//   X1, X2, Y1, Y2: input arrays of floats (length n)
//   Z: output array of floats (length n)
//   n: number of elements
//
// This function matches the logic and output of the assembly kernel.
void distance_kernel_c(float *X1, float *X2, float *Y1, float *Y2, float *Z, uint32_t n) {
    for (uint32_t i = 0; i < n; i++) {
        float dx = X2[i] - X1[i];
        float dy = Y2[i] - Y1[i];
        Z[i] = sqrtf(dx * dx + dy * dy);
    }
}
